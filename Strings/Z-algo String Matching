// Z Algo

#include<bits/stdc++.h>
using namespace std;

vector<int> buildZ(string str){
    int n = str.length();
    vector<int> z(n);
    z[0] = 0;
    int left = 0, right = 0;
    
    for(int k=1; k<n; k++){
        if(right<k){
            left = right = k;
            while(right<n && str[right-left] == str[right])    right++;
            z[left] = right-left;
            right--;
        }
        else{
            if(z[k-left] + k <= right)    z[k] = z[k-left];
            else{
                left = right = k;
                while(right<n && str[right-left] == str[right])    right++;
                z[left] = right-left;
                right--;
            }
        }
    }

    return z;
}

void stringMatching(string &text, string &pat){
    string str = pat + "$" + text;
    int patLen = pat.length();
    
    vector<int> z = buildZ(str);
    
    bool patternPresent = false;
    for(int i=0; i<z.size(); i++){
        if(z[i] == patLen)    patternPresent = true; // cout<< i - patLen - 1 <<endl;  // To print the matching positions.
    }
    if(patternPresent)	  cout<< "Yes" <<endl;
    else	cout<< "No" <<endl;
}
// /

int main(){
    int t;    cin>>t;
    while(t--){
        string pat, text;   cin>>pat>>text;
        stringMatching(text, pat);
    }
    
    return 0;
}
